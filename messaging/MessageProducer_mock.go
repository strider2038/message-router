// Code generated by MockGen. DO NOT EDIT.
// Source: MessageProducer.go

// Package messaging is a generated GoMock package.
package messaging

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMessageProducer is a mock of MessageProducer interface
type MockMessageProducer struct {
	ctrl     *gomock.Controller
	recorder *MockMessageProducerMockRecorder
}

// MockMessageProducerMockRecorder is the mock recorder for MockMessageProducer
type MockMessageProducerMockRecorder struct {
	mock *MockMessageProducer
}

// NewMockMessageProducer creates a new mock instance
func NewMockMessageProducer(ctrl *gomock.Controller) *MockMessageProducer {
	mock := &MockMessageProducer{ctrl: ctrl}
	mock.recorder = &MockMessageProducerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessageProducer) EXPECT() *MockMessageProducerMockRecorder {
	return m.recorder
}

// Produce mocks base method
func (m *MockMessageProducer) Produce(messages []RoutedMessage) error {
	ret := m.ctrl.Call(m, "Produce", messages)
	ret0, _ := ret[0].(error)
	return ret0
}

// Produce indicates an expected call of Produce
func (mr *MockMessageProducerMockRecorder) Produce(messages interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Produce", reflect.TypeOf((*MockMessageProducer)(nil).Produce), messages)
}
